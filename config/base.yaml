api:
  reboot_timeout:
    hours: 24

ota:
  platform: esphome

web_server:
  port: 80

# Example configuration entry
time:
  - platform: sntp
    timezone: Etc/EST
    id: sntp_time
        
sensor:
  - platform: uptime
    name: ${friendly_name} Uptime
    id: ${device_id}_uptime
   
  - platform: wifi_signal
    name: ${friendly_name} WiFi Signal
    id: ${device_id}_signal

text_sensor:
  - platform: version
    name: ${friendly_name} Version
    id: ${device_id}_version
  
  - platform: wifi_info
    ip_address:
      name: ${friendly_name} IP
      id: ${device_id}_ip
    ssid:
      name: ${friendly_name} WiFi SSID
      id: ${device_id}_ssid
    bssid:
      name: ${friendly_name} WiFi BSSID
      id: ${device_id}_bssid
    mac_address:
      name: ${friendly_name} WiFi MAC
      id: ${device_id}_mac
      
  # Alternative WiFi SSID sensor using template
  - platform: template
    name: ${friendly_name} Connected SSID
    id: ${device_id}_connected_ssid
    lambda: |-
      return {WiFi.SSID().c_str()};
    update_interval: 5s
      
  - platform: template
    name: ${friendly_name} Time
    id: ${device_id}_time
    lambda: |-
      char str[17];
      time_t currTime = id(sntp_time).now().timestamp;
      strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
      return { str };
<<: !include wifi.yaml
